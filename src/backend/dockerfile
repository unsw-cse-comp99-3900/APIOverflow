# FROM baseImage:tag - this specifies the base image and its version
FROM python:3.10-slim

# WORKDIR /the/workdir/path - path to use as the working directory
WORKDIR /src/backend

ENV PYTHONPATH "${PYTHONPATH}:/"
COPY ../__init__.py /src

# Copy files or folders from source (on your laptop) to the dest path (in the image)
COPY . .
# RUN is used to run commands inside the container. Here we want to install all required modules from package.json before we actually run our program
RUN pip install --no-cache-dir -r requirements.txt
# Here we want to copy all files from our laptop code to the container
COPY . .
# EXPOSE is used to specify all ports in the container that we will need
EXPOSE 5000
# CMD specifies the command used to start the application. We can only have one CMD statement in our Dockerfile

ARG DB_PATH="mongo"
ENV DB_PATH ${DB_PATH}

# to run normally: docker compose build; docker compose up
# to run pytest: docker compose build --build-arg DB_PATH=mongo_test; docker compose up
# unless switching from normal to pytest or vice versa, no need to run docker compose build again
# rebuilding is only required when modifying dockerfiles or switching between running
# normally and running pytest

# for increased testing speed, can change below command to 
# pytest tests/file_name.py -vv
CMD echo ${DB_PATH}; if [ "$DB_PATH" = "mongo" ] ; then python app.py; else pytest -vv; fi

# pytest -vv tests/test.py::testfunc