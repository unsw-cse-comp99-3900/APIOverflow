services:
  mongodb:
    image: mongo:latest
    # tty: true
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db

  # docker compose run backend to run only backend 
  backend:
    build: ./src/backend
    volumes: 
      # 'mounts' a volume so that modifying code locally automatically modifies
      # the code in the container so we don't have to rebuild each time
      - ./src/backend:/src/backend
    # Add if necessary
    # environment:
    ports:
      # be exposes port 5000
      # map containers port 5000 to external port 5001
      - 5001:5000
    environment:
      - MONGO_ENV=docker
    depends_on:
      - mongodb
    links:
      - mongodb
  
  frontend:
    build: ./src/frontend 
    volumes:
      - ./src/frontend:/src/frontend
      - /src/frontend/node_modules
    ports: 
      # fe exports port 3000
      - 3000:3000
    
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  mongo:

# services:
#   mongodb:
#     image: mongo:latest
#     # tty: true
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo:/data/db

#   # docker compose run backend to run only backend 
#   backend:
#     build: ./src/backend
#     volumes: 
#       # 'mounts' a volume so that modifying code locally automatically modifies
#       # the code in the container so we don't have to rebuild each time
#       - ./src/backend:/src/backend
#     # Add if necessary
#     # environment:
#     ports:
#       # be exposes port 5000
#       # map containers port 5000 to external port 5001
#       - 5001:5000
#     environment:
#       - MONGO_ENV=docker
#     depends_on:
#       - mongodb
    
#   frontend:
#     build: ./src/frontend 
#     volumes:
#       - ./src/frontend:/src/frontend
#       - /src/frontend/node_modules
#     ports: 
#       # fe exports port 3000
#       - 3000:3000
    
#     depends_on:
#       - backend
#     environment:
#       - CHOKIDAR_USEPOLLING=true

# volumes:
#   mongo: